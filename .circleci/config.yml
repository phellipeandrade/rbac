# .circleci/config.yml
version: 2.1

jobs:
  build:
    docker:
      - image: cimg/node:20.16.0
    working_directory: ~/rbac

    steps:
      - checkout

      # Cache dependencies
      - restore_cache:
          keys:
            - v2-deps-{{ checksum "yarn.lock" }}
            - v2-deps-

      - run:
          name: Install Dependencies
          command: yarn install

      - save_cache:
          paths:
            - node_modules
            - ~/.cache/yarn
          key: v2-deps-{{ checksum "yarn.lock" }}

      # Install middleware dependencies
      - run:
          name: Install Middleware Dependencies
          command: |
            yarn add -D express @types/express @types/node

      # Build and verify minification
      - run:
          name: Build Project
          command: |
            # Build the package
            yarn build
            
            # Verify minification
            if [ ! -f "lib/@rbac/rbac.min.js" ]; then
              echo "Error: Minified file not found"
              exit 1
            fi
            
            # Verify file size (should be significantly smaller than source)
            source_size=$(stat -c %s "lib/index.js")
            minified_size=$(stat -c %s "lib/@rbac/rbac.min.js")
            
            if [ $minified_size -ge $source_size ]; then
              echo "Error: Minified file is not smaller than source"
              exit 1
            fi
            
            echo "âœ… Minification verified successfully"

      # Cache build artifacts
      - save_cache:
          paths:
            - lib
            - dist
          key: v2-build-{{ .Environment.CIRCLE_BRANCH }}-{{ checksum "package.json" }}

      - run:
          name: Run Tests
          command: yarn test

  test-npm:
    docker:
      - image: cimg/node:20.16.0
    working_directory: ~/rbac

    steps:
      - checkout

      # Install build dependencies
      - run:
          name: Install Build Dependencies
          command: |
            yarn add -D typescript vite
            yarn list typescript vite # Verify dependencies are installed

      # Always run build first since lib is gitignored
      - run:
          name: Build Project
          command: yarn build

      # Install database adapters in main project
      - run:
          name: Install Database Adapters
          command: |
            yarn add mongodb mysql2 pg
            yarn list mongodb mysql2 pg # Verify dependencies are installed

      # Install test dependencies
      - run:
          name: Install Test Dependencies
          command: |
            cd test/npm-test
            npm install
            npm ls mongodb # Verify MongoDB is installed

      # Run npm test
      - run:
          name: Test npm Package
          command: yarn test:npm

  test-remote:
    docker:
      - image: cimg/node:18.18
    steps:
      - checkout
      
      # Install dependencies
      - run:
          name: Install Dependencies
          command: npm install
      
      # Build project
      - run:
          name: Build Project
          command: |
            # Clean build directory
            rm -rf lib/
            mkdir -p lib
            
            # Build the project
            npm run build
            
            # Verify build output
            if [ ! -d "lib" ]; then
              echo "Error: Build directory not found"
              exit 1
            fi
            
            # Verify minified file exists
            if [ ! -f "lib/@rbac/rbac.min.js" ]; then
              echo "Error: Minified file not found in expected location"
              exit 1
            fi
            
            # Copy package files to expected location
            mkdir -p lib/@rbac
            cp package.json lib/@rbac/package.json
            cp package-lock.json lib/@rbac/package-lock.json
            
            # Verify files exist
            if [ ! -f "lib/@rbac/package.json" ]; then
              echo "Error: Package file not found"
              exit 1
            fi
      
      # Cache build artifacts
      - save_cache:
          key: v2-build-{{ .Environment.CIRCLE_BRANCH }}-{{ checksum "package.json" }}
          paths:
            - node_modules
            - lib/@rbac
            - lib/rbac.min.js
            
      # Copy build artifacts to test directory
      - run:
          name: Copy Build Artifacts
          command: |
            # Create necessary directories
            mkdir -p test/npm-test/lib/@rbac
            
            # Copy package files
            cp package.json test/npm-test/
            cp package-lock.json test/npm-test/
            
            # Copy build artifacts
            cp -r lib/@rbac/* test/npm-test/lib/@rbac/
      
      # Test remote version
      - run:
          name: Test Remote Version
          command: |
            # Install MongoDB for remote tests
            sudo apt-get update
            sudo apt-get install -y mongodb
            sudo service mongodb start
            
            # Run remote tests
            cd test/npm-test && npm install && npm test

workflows:
  test-workflow:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
                - develop
                - /feature\/.*/
                - /hotfix\/.*/
                - /release\/.*/
      - test-npm:
          requires:
            - build
          filters:
            branches:
              only:
                - main
                - develop
                - /feature\/.*/
                - /hotfix\/.*/
                - /release\/.*/
      - test-remote:
          requires:
            - build
          filters:
            branches:
              only:
                - main
                - develop
                - /feature\/.*/
                - /hotfix\/.*/
                - /release\/.*

    when:
      pull-requests:
        only: true
      branches:
        only:
          - main
          - develop
          - /feature\/.*/
          - /hotfix\/.*/
          - /release\/.*/
